###################################
library(inflection)
#########################
##con el metodo ESE
##Ahora si quitamos todos los que tienen 0 bases de H3K27me3
##Reordenamos de mayor a menor para tenerlo como un scree plot
genesWithSignal<-developForPlot[order(developForPlot$longitudPicos, decreasing = TRUE),]
#To compute inflection point excluding the 0 values
genesWithSignal<-subset(genesWithSignal, longitudPicos>0)$longitudPicos
##Tal y como indican en el paper para el scree plot, que es el mismo concepto
elbowPoint<-findiplist(x = 1:length(genesWithSignal), y = genesWithSignal,
index = 0##
)
##Check if method EDE is applicable
if(is.na(elbowPoint[2,3])){
print("method EDE not applicable")
}
##Loading again data of genes without exluding those without signal (peak length 0)
genesWithSignal<-developForPlot[order(developForPlot$longitudPicos, decreasing = TRUE),]
genesWithSignal<-genesWithSignal$longitudPicos
nroObservacion_limiteSuperior_RegionKneePoint<-elbowPoint[1,1] ##Pq va en decreasing
nroObservacion_limiteInferior_RegionKneePoint<-elbowPoint[1,2] ##Pq va en decreasing
kneePoint_ejeX<-elbowPoint[1,3]
elbowPoint<-elbowPoint[1,1]##ESE
genesWithSignal[elbowPoint]
targetLongitudPico<-genesWithSignal[elbowPoint]
plot(x=1:length(genesWithSignal), y=genesWithSignal, type = "l", lwd=3, main = "H3K27me3 peak size associated to TSS \n in ESCs", xlab = "TSS", ylab="H3K27me3 peak size")
abline(h=c(targetLongitudPico),col="red", lwd=2, lty=2)
abline(v=nroObservacion_limiteSuperior_RegionKneePoint,col="red", lwd=2, lty=2)
abline(v=kneePoint_ejeX, col="blue", lwd=2, lty=2)
abline(v=nroObservacion_limiteInferior_RegionKneePoint, col="green", lwd=2, lty=2)
text(x= 20000, y=12000, paste0(targetLongitudPico, " bp"), col="red")
thresh<-targetLongitudPico
#####################################################################
##### seleccion genes (TSS) de desarrollo, aquellos cuyo overalapped H3K27me3 peak > thresh
#####################################################################
genesDesarrollo_allInfo<-developForPlot[developForPlot$longitudPicos>=thresh,]
selectedDevelopGenes<-sort(unique(as.character(genesDesarrollo_allInfo$gene)))
########################################################################
##### no nos interesan ni los LINC ni los LOC asi que vamos a quitarlos
########################################################################
AllGenes<-as.character(unique(developForPlot$gene))#27090
LINCs<-AllGenes[grep("^LINC.*", AllGenes)]
LOCs<-AllGenes[grep("^LOC[0-9].*", AllGenes)]
NotRelevant<-c(LINCs,LOCs)#LINCs and LOCs
##########################################################################
###### seleccion de los TSS de interes
##########################################################################
selectedDevelopGenes<-selectedDevelopGenes[!(selectedDevelopGenes %in% NotRelevant)]
print(thresh)
print(length(selectedDevelopGenes))
####################
## Saving results
####################
hESC_polyCombGenes<-selectedDevelopGenes
save(hESC_polyCombGenes, file = "~/Dropbox/Cantabria/PhD_Project/Resultados/genesDesarrollo/Robjects/hESC_polyCombGenes.RData")
tiff("/home/victor/Documentos/phD/ArticlesWritting/Postre_manuscript/Revision_NAR/Manuscrito_New_Version/SupplementaryMaterial/SupplementaryFigures/Supplementary_Figure_1/ESC.tiff", units="in",
width=5, height=5, res=300)
plot(x=1:length(genesWithSignal), y=genesWithSignal, type = "l", lwd=3, main = "H3K27me3 peak size associated to TSS \n in ESCs", xlab = "TSS", ylab="H3K27me3 peak size")
abline(h=c(targetLongitudPico),col="red", lwd=2, lty=2)
abline(v=nroObservacion_limiteSuperior_RegionKneePoint,col="red", lwd=2, lty=2)
abline(v=kneePoint_ejeX, col="blue", lwd=2, lty=2)
abline(v=nroObservacion_limiteInferior_RegionKneePoint, col="green", lwd=2, lty=2)
text(x= 20000, y=12000, paste0(targetLongitudPico, " bp"), col="red")
dev.off()
tiff("/home/victor/Documentos/phD/ArticlesWritting/Postre_manuscript/Revision_NAR/Manuscrito_New_Version/SupplementaryMaterial/SupplementaryFigures/Supplementary_Figure_1/ESC.tiff", units="in",
width=8, height=4, res=300)
plot(x=1:length(genesWithSignal), y=genesWithSignal, type = "l", lwd=3, main = "H3K27me3 peak size associated to TSS \n in ESCs", xlab = "TSS", ylab="H3K27me3 peak size")
abline(h=c(targetLongitudPico),col="red", lwd=2, lty=2)
abline(v=nroObservacion_limiteSuperior_RegionKneePoint,col="red", lwd=2, lty=2)
abline(v=kneePoint_ejeX, col="blue", lwd=2, lty=2)
abline(v=nroObservacion_limiteInferior_RegionKneePoint, col="green", lwd=2, lty=2)
text(x= 20000, y=12000, paste0(targetLongitudPico, " bp"), col="red")
dev.off()
tiff("/home/victor/Documentos/phD/ArticlesWritting/Postre_manuscript/Revision_NAR/Manuscrito_New_Version/SupplementaryMaterial/SupplementaryFigures/Supplementary_Figure_1/ESC.tiff", units="in",
width=7, height=4, res=300)
plot(x=1:length(genesWithSignal), y=genesWithSignal, type = "l", lwd=3, main = "H3K27me3 peak size associated to TSS \n in ESCs", xlab = "TSS", ylab="H3K27me3 peak size")
abline(h=c(targetLongitudPico),col="red", lwd=2, lty=2)
abline(v=nroObservacion_limiteSuperior_RegionKneePoint,col="red", lwd=2, lty=2)
abline(v=kneePoint_ejeX, col="blue", lwd=2, lty=2)
abline(v=nroObservacion_limiteInferior_RegionKneePoint, col="green", lwd=2, lty=2)
text(x= 20000, y=12000, paste0(targetLongitudPico, " bp"), col="red")
dev.off()
tiff("/home/victor/Documentos/phD/ArticlesWritting/Postre_manuscript/Revision_NAR/Manuscrito_New_Version/SupplementaryMaterial/SupplementaryFigures/Supplementary_Figure_1/ESC.tiff", units="in",
width=6, height=3.8, res=300)
plot(x=1:length(genesWithSignal), y=genesWithSignal, type = "l", lwd=3, main = "H3K27me3 peak size associated to TSS \n in ESCs", xlab = "TSS", ylab="H3K27me3 peak size")
abline(h=c(targetLongitudPico),col="red", lwd=2, lty=2)
abline(v=nroObservacion_limiteSuperior_RegionKneePoint,col="red", lwd=2, lty=2)
abline(v=kneePoint_ejeX, col="blue", lwd=2, lty=2)
abline(v=nroObservacion_limiteInferior_RegionKneePoint, col="green", lwd=2, lty=2)
text(x= 20000, y=12000, paste0(targetLongitudPico, " bp"), col="red")
dev.off()
##############################################################################
##Master Regulators, those above the inflection point of the H3K27me3 curve
##############################################################################
###### filtering OverlapResults
## si los transcritos comparten TSS nos quedaremos con los 2 como un único
## pero si no lo comparten los trataremos por separado
load(file = "~/Dropbox/Cantabria/PhD_Project/Resultados/genesDesarrollo/bofsMetilacion/pi2_findingDevelopGenes.RData")
#vamos a trabajar con cada TSS por separado
#de forma que si los dos tienen un pico de H3K27me3, trabajaremos con los 2
# y si solo hay uno, nos quedaremos con ese solo
#no obstante si que nos quedaremos con una única fila, si los dos transcritos presentan el mismo TSS y estan mapeados con el mismo pico
dim(developmentMatrix)
developmentMatrix<-unique(developmentMatrix) # de 34513 a 34513 (expected)
dim(developmentMatrix)
developmentMatrix<-as.data.frame(developmentMatrix)
#### anyadir columna lengths
#las pos picos estan como factores, las pasamos a numerico
developmentMatrix$peakStart<-as.numeric(as.character(developmentMatrix$peakStart))
developmentMatrix$peakEnd<-as.numeric(as.character(developmentMatrix$peakEnd))
developmentMatrix$longitudPicos<-developmentMatrix$peakEnd - developmentMatrix$peakStart
min(developmentMatrix$longitudPicos) #0 as expected
developForPlot<-developmentMatrix
rm(developmentMatrix)
developForPlot<-developForPlot[order(developForPlot$longitudPicos,decreasing = F),]
###################################
## Computing line inflexion point
###################################
library(inflection)
#########################
##con el metodo ESE
##Ahora si quitamos todos los que tienen 0 bases de H3K27me3
##Reordenamos de mayor a menor para tenerlo como un scree plot
genesWithSignal<-developForPlot[order(developForPlot$longitudPicos, decreasing = TRUE),]
#To compute inflection point excluding the 0 values
genesWithSignal<-subset(genesWithSignal, longitudPicos>0)$longitudPicos
##Tal y como indican en el paper para el scree plot, que es el mismo concepto
elbowPoint<-findiplist(x = 1:length(genesWithSignal), y = genesWithSignal,
index = 0##
)
##Check if method EDE is applicable
if(is.na(elbowPoint[2,3])){
print("method EDE not applicable")
}
##Loading again data of genes without exluding those without signal (peak length 0)
genesWithSignal<-developForPlot[order(developForPlot$longitudPicos, decreasing = TRUE),]
genesWithSignal<-genesWithSignal$longitudPicos
nroObservacion_limiteSuperior_RegionKneePoint<-elbowPoint[1,1] ##Pq va en decreasing
nroObservacion_limiteInferior_RegionKneePoint<-elbowPoint[1,2] ##Pq va en decreasing
kneePoint_ejeX<-elbowPoint[1,3]
elbowPoint<-elbowPoint[1,1]##ESE
genesWithSignal[elbowPoint]
targetLongitudPico<-genesWithSignal[elbowPoint]
plot(x=1:length(genesWithSignal), y=genesWithSignal, type = "l", lwd=3, main = "H3K27me3 peak size associated to TSS \n in NCCs", xlab = "TSS", ylab="H3K27me3 peak size")
abline(h=c(targetLongitudPico),col="red", lwd=2, lty=2)
abline(v=nroObservacion_limiteSuperior_RegionKneePoint,col="red", lwd=2, lty=2)
abline(v=kneePoint_ejeX, col="blue", lwd=2, lty=2)
abline(v=nroObservacion_limiteInferior_RegionKneePoint, col="green", lwd=2, lty=2)
text(x= 20000, y=16000, paste0(targetLongitudPico, " bp"), col="red")
thresh<-targetLongitudPico
#####################################################################
##### seleccion genes (TSS) de desarrollo, aquellos cuyo overalapped H3K27me3 peak > thresh
#####################################################################
genesDesarrollo_allInfo<-developForPlot[developForPlot$longitudPicos>=thresh,]
selectedDevelopGenes<-sort(unique(as.character(genesDesarrollo_allInfo$gene)))
########################################################################
##### no nos interesan ni los LINC ni los LOC asi que vamos a quitarlos
########################################################################
AllGenes<-as.character(unique(developForPlot$gene))#27090
LINCs<-AllGenes[grep("^LINC.*", AllGenes)]
LOCs<-AllGenes[grep("^LOC[0-9].*", AllGenes)]
NotRelevant<-c(LINCs,LOCs)#LINCs and LOCs
##########################################################################
###### seleccion de los TSS de interes
##########################################################################
selectedDevelopGenes<-selectedDevelopGenes[!(selectedDevelopGenes %in% NotRelevant)]
print(thresh)
print(length(selectedDevelopGenes))
####################
## Saving results
####################
hs_pi2_polyCombGenes<-selectedDevelopGenes
save(hs_pi2_polyCombGenes, file = "~/Dropbox/Cantabria/PhD_Project/Resultados/genesDesarrollo/Robjects/hs_pi2_polyCombGenes.RData")
tiff("/home/victor/Documentos/phD/ArticlesWritting/Postre_manuscript/Revision_NAR/Manuscrito_New_Version/SupplementaryMaterial/SupplementaryFigures/Supplementary_Figure_1/NCCs.tiff", units="in",
width=6, height=3.8, res=300)
plot(x=1:length(genesWithSignal), y=genesWithSignal, type = "l", lwd=3, main = "H3K27me3 peak size associated to TSS \n in NCCs", xlab = "TSS", ylab="H3K27me3 peak size")
abline(h=c(targetLongitudPico),col="red", lwd=2, lty=2)
abline(v=nroObservacion_limiteSuperior_RegionKneePoint,col="red", lwd=2, lty=2)
abline(v=kneePoint_ejeX, col="blue", lwd=2, lty=2)
abline(v=nroObservacion_limiteInferior_RegionKneePoint, col="green", lwd=2, lty=2)
text(x= 20000, y=16000, paste0(targetLongitudPico, " bp"), col="red")
dev.off()
##############################################################################
##Master Regulators, those above the inflection point of the H3K27me3 curve
##############################################################################
###### filtering OverlapResults
## si los transcritos comparten TSS nos quedaremos con los 2 como un único
## pero si no lo comparten los trataremos por separado
load(file = "~/Dropbox/Cantabria/PhD_Project/Resultados/genesDesarrollo/cardiomiocitos/heart_findingDevelopGenes.RData")
#vamos a trabajar con cada TSS por separado
#de forma que si los dos tienen un pico de H3K27me3, trabajaremos con los 2
# y si solo hay uno, nos quedaremos con ese solo
#no obstante si que nos quedaremos con una única fila, si los dos transcritos presentan el mismo TSS y estan mapeados con el mismo pico
dim(developmentMatrix)
developmentMatrix<-unique(developmentMatrix) # de 34513 a 34513 (expected)
dim(developmentMatrix)
developmentMatrix<-as.data.frame(developmentMatrix)
#### anyadir columna lengths
#las pos picos estan como factores, las pasamos a numerico
developmentMatrix$peakStart<-as.numeric(as.character(developmentMatrix$peakStart))
developmentMatrix$peakEnd<-as.numeric(as.character(developmentMatrix$peakEnd))
developmentMatrix$longitudPicos<-developmentMatrix$peakEnd - developmentMatrix$peakStart
min(developmentMatrix$longitudPicos) #0 as expected
developForPlot<-developmentMatrix
rm(developmentMatrix)
developForPlot<-developForPlot[order(developForPlot$longitudPicos,decreasing = F),]
###################################
## Computing line inflexion point
###################################
library(inflection)
#########################
##con el metodo ESE
##Ahora si quitamos todos los que tienen 0 bases de H3K27me3
##Reordenamos de mayor a menor para tenerlo como un scree plot
genesWithSignal<-developForPlot[order(developForPlot$longitudPicos, decreasing = TRUE),]
#To compute inflection point excluding the 0 values
genesWithSignal<-subset(genesWithSignal, longitudPicos>0)$longitudPicos
##Tal y como indican en el paper para el scree plot, que es el mismo concepto
elbowPoint<-findiplist(x = 1:length(genesWithSignal), y = genesWithSignal,
index = 0##
)
##Check if method EDE is applicable
if(is.na(elbowPoint[2,3])){
print("method EDE not applicable")
}
##Loading again data of genes without exluding those without signal (peak length 0)
genesWithSignal<-developForPlot[order(developForPlot$longitudPicos, decreasing = TRUE),]
genesWithSignal<-genesWithSignal$longitudPicos
nroObservacion_limiteSuperior_RegionKneePoint<-elbowPoint[1,1] ##Pq va en decreasing
nroObservacion_limiteInferior_RegionKneePoint<-elbowPoint[1,2] ##Pq va en decreasing
kneePoint_ejeX<-elbowPoint[1,3]
elbowPoint<-elbowPoint[1,1]##ESE
genesWithSignal[elbowPoint]
targetLongitudPico<-genesWithSignal[elbowPoint]
plot(x=1:length(genesWithSignal), y=genesWithSignal, type = "l", lwd=3, main = "H3K27me3 peak size associated to TSS \n in Cardiomyocites", xlab = "TSS", ylab="H3K27me3 peak size")
abline(h=c(targetLongitudPico),col="red", lwd=2, lty=2)
abline(v=nroObservacion_limiteSuperior_RegionKneePoint,col="red", lwd=2, lty=2)
abline(v=kneePoint_ejeX, col="blue", lwd=2, lty=2)
abline(v=nroObservacion_limiteInferior_RegionKneePoint, col="green", lwd=2, lty=2)
text(x= 20000, y=13000, paste0(targetLongitudPico, " bp"), col="red")
thresh<-targetLongitudPico
#####################################################################
##### seleccion genes (TSS) de desarrollo, aquellos cuyo overalapped H3K27me3 peak > thresh
#####################################################################
genesDesarrollo_allInfo<-developForPlot[developForPlot$longitudPicos>=thresh,]
selectedDevelopGenes<-sort(unique(as.character(genesDesarrollo_allInfo$gene)))
########################################################################
##### no nos interesan ni los LINC ni los LOC asi que vamos a quitarlos
########################################################################
AllGenes<-as.character(unique(developForPlot$gene))#27090
LINCs<-AllGenes[grep("^LINC.*", AllGenes)]
LOCs<-AllGenes[grep("^LOC[0-9].*", AllGenes)]
NotRelevant<-c(LINCs,LOCs)#LINCs and LOCs
##########################################################################
###### seleccion de los TSS de interes
##########################################################################
selectedDevelopGenes<-selectedDevelopGenes[!(selectedDevelopGenes %in% NotRelevant)]
print(thresh)
print(length(selectedDevelopGenes))
####################
## Saving results
####################
hs_cardiomiocytes_polyCombGenes<-selectedDevelopGenes
save(hs_cardiomiocytes_polyCombGenes, file = "~/Dropbox/Cantabria/PhD_Project/Resultados/genesDesarrollo/Robjects/hs_cardiomiocytes_polyCombGenes.RData")
tiff("/home/victor/Documentos/phD/ArticlesWritting/Postre_manuscript/Revision_NAR/Manuscrito_New_Version/SupplementaryMaterial/SupplementaryFigures/Supplementary_Figure_1/Cardiomyocytes.tiff", units="in",
width=6, height=3.8, res=300)
plot(x=1:length(genesWithSignal), y=genesWithSignal, type = "l", lwd=3, main = "H3K27me3 peak size associated to TSS \n in Cardiomyocites", xlab = "TSS", ylab="H3K27me3 peak size")
abline(h=c(targetLongitudPico),col="red", lwd=2, lty=2)
abline(v=nroObservacion_limiteSuperior_RegionKneePoint,col="red", lwd=2, lty=2)
abline(v=kneePoint_ejeX, col="blue", lwd=2, lty=2)
abline(v=nroObservacion_limiteInferior_RegionKneePoint, col="green", lwd=2, lty=2)
text(x= 20000, y=13000, paste0(targetLongitudPico, " bp"), col="red")
dev.off()
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
shiny::runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
shiny::runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
source("https://raw.githubusercontent.com/vicsanga/Postre/main/Postre_wrapper.R")
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
source("https://raw.githubusercontent.com/vicsanga/Postre/main/Postre_wrapper.R")
source("https://raw.githubusercontent.com/vicsanga/Postre/main/Postre_wrapper.R")
source("https://raw.githubusercontent.com/vicsanga/Postre/main/Postre_wrapper.R")
source("https://raw.githubusercontent.com/vicsanga/Postre/main/Postre_wrapper.R")
shiny::runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
source("https://raw.githubusercontent.com/vicsanga/Postre/main/Postre_wrapper.R")
source("https://raw.githubusercontent.com/vicsanga/Postre/main/Postre_wrapper.R")
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
#############################
## PCA-Initial exploration
## FOR fpkms
#############################
load(file = "/home/victor/Documentos/phD/manyFolders/colaboraciones/maria/rna_seq/processedFiles/maria_rnaSeq_2021_fpkm.RData")
###############################################
##Loading relevant genes in counts script
#load(file = "/home/victor/Documentos/phD/colaboraciones/maria/rna_seq/processedFiles/test_genesSelectedCountsAnalyses.RData")
#fpkm_masterMatrix<-fpkm_masterMatrix[fpkm_masterMatrix$gene_id %in% genesCountsAnalyses,]
####################
##remvoing character columns
num_fpkm<-fpkm_masterMatrix[,-c(1,2)]
num_fpkm<-log2(num_fpkm+1) ##log2 transformation essential to get meaningful results on plots, reducing effect of hugely expressed genes
filteringCols<-c("WT_1A_D0","WT_1B_D0","WT_2A_D0","WT_2B_D0",
"KO_1A_D0",        "KO_1B_D0",        "KO_2A_D0",        "KO_2B_D0",        "WT_1A_D3",        "WT_1B_D3",
"WT_2A_D3",        "WT_2B_D3",        "KO_1A_D3",        "KO_1B_D3",        "KO_2A_D3",        "KO_2B_D3" ,
"RNA_WT_D6_1",     "RNA_WT_D6_2",     "RNA_WT_D6_3",     "RNA_Z2KO_1_D6_1",
"RNA_Z2KO_1_D6_2", "RNA_Z2KO_1_D6_3")
num_fpkm<-num_fpkm[,filteringCols]
# ##################################
# ##Doing some clustering analyses
#
# library(rafalib)
#
# ##En primer lugar vamosa calcular al distancia entre cada par de observaciones
# ##La funcion dist, calcula la distancia entre las filas de la matriz. Por tanto, pensad si teneis que transponer o no la matriz...
# ##Por defecto calcula la distancia euclidea
# d <- dist(t(num_fpkm))
#
# #View(as.matrix(d))
#
# ##Realizamos el clustering jerarquico atendiendo a las distancias calculadas entre cada par de observaciones
# hc_analysis <- hclust(d)
# hc_analysis
#
# ##Representamos el arbol pintado por colores
# # plot(hc_analysis,labels=colnames(num_fpkm),cex=0.5)
#
#
# ##
# tissuesColors<-c(rep.int(x = "red",times=4),
#                  rep.int(x = "darkred",times=4),
#                  rep.int(x = "green",times=4),
#                  rep.int(x = "darkgreen",times=4),
#                  rep.int(x = "blue",times=4),
#                  rep.int(x = "darkblue",times=4),
#                  rep.int(x = "orange",times=3)
# )
#
#
# ##Plot pintando por colores
# myplclust(hc_analysis, labels=colnames(num_fpkm), lab.col=tissuesColors, cex=1)
#
#
# ###Remove for pca study
# # fpkm_masterMatrix<-fpkm_masterMatrix[!genesNotExpNever,]
# # num_fpkm<-num_fpkm[!genesNotExpNever,]
#
# ##doing pca
# fun_doingPca<-function(targetMatrix, center, scale, PC_tag1, PC_tag2){
#         targetRes<-prcomp(x=t(targetMatrix), center = center, scale. = scale)
#
#         plot(x=targetRes$x[,PC_tag1],
#              y=targetRes$x[,PC_tag2],
#              pch = 19,
#              col=tissuesColors,
#
#              xlab=PC_tag1,
#              ylab=PC_tag2
#
#         )
#
#         # text(x=targetRes$x[,PC_tag1],
#         #      y=targetRes$x[,PC_tag2],
#         #      labels = colnames(targetMatrix),
#         #      col=tissuesColors)
# }
#
# fun_doingPca(targetMatrix = num_fpkm, center = TRUE, scale = FALSE,
#              PC_tag1 = "PC1", PC_tag2 = "PC2")
#############
## PCA NICE
tissuesColors<-c(rep.int(x = "red",times=4),
rep.int(x = "darkred",times=4),
rep.int(x = "green",times=4),
rep.int(x = "darkgreen",times=4),
rep.int(x = "blue",times=4),
rep.int(x = "darkblue",times=4),
rep.int(x = "dodgerblue",times=3),
rep.int(x = "dodgerblue3",times=3),
rep.int(x = "orange",times=3)
)
tissuesColorsUnique<-c(rep.int(x = "red",times=1),
rep.int(x = "darkred",times=1),
rep.int(x = "green",times=1),
rep.int(x = "darkgreen",times=1),
rep.int(x = "blue",times=1),
rep.int(x = "darkblue",times=1),
rep.int(x = "dodgerblue",times=1),
rep.int(x = "dodgerblue3",times=1),
rep.int(x = "orange",times=1)
)
expDesignGroups<-c(rep.int(x = "WT_D0",times=4),
rep.int(x = "KO_D0",times=4),
rep.int(x = "WT_D3",times=4),
rep.int(x = "KO_D3",times=4),
rep.int(x = "WT_D6",times=3),
rep.int(x = "KO_D6",times=3)
)
##Metadatos, expDesignMatrix, en este caso un dataframe
expDesignMat<-data.frame("condition"= expDesignGroups)
rownames(expDesignMat)<-colnames(num_fpkm)##Mismo da el 1 que el 2
##Check expDesign object
expDesignMat
##PCA
library(PCAtools)
x11()
data1_pca<-PCAtools::pca(mat = num_fpkm,
transposed = FALSE,
center = TRUE,
scale = FALSE,
metadata = expDesignMat
)#Se espera que las variables, en este caso los genes esten en las filas, como ya estan, no transponemos la matriz
screeplot(data1_pca, axisLabSize = 18, titleLabSize = 22, components = 1:10)
##Plot per a components 1 i 2
biplot(data1_pca, colby = "condition", x="PC1", y="PC2", labSize = 0, title = "ZIC2 PCA")
shiny::runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
runApp('Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app')
####################################################################
## Script for HTML generation for Web with Patients Cohort Study
####################################################################
##Use maybe the Standard info only
##Loading Standard Mode PARSED results
load(file = "~/Dropbox/Cantabria/PhD_Project/Resultados/softwareObjects/multiplePatientAnalysis/StandardMode_ParsedResults_MultiplePatientAnalyses.RData")
########################################
##HTML generation with cohort results
########################################
###Setwd in the folder where all the app info is hosted
setwd("~/Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app/")
##Required functions
source("functions/multiple_SV_Functions/multipleStats_ExplorePreviousPat_htmlGeneration.R")
##AllPatientsInfo table, required for the Patients Info section
load("~/Dropbox/Cantabria/PhD_Project/DatosPHD/fichasPacientes/AllPatientsInfo.RData")
##Phenotypes to be considered
consideredPheno<-c("head_neck",
"cardiovascular",
"limbs",
"neurodevelopmental")##As more phenos considered they will appear here
ExplorePreviousPatients_html<-multipleStats_htmlGeneration(cohort_results = cohort_results_standard,
consideredPheno = consideredPheno,
ids_append="PreviousPat",##to avoid conflicts with tables generated in multiples submission option
AllPatientsInfo=AllPatientsInfo,
explPreviousPatSection = TRUE)
###########################################################################################
##This is the html that is going to be loaded on the Explore Previous Patients Section
##Wrapp in html tags to avoid issues AND save html
###########################################################################################
ExplorePreviousPatients_html<-paste("<html><body>",
ExplorePreviousPatients_html,
"</body></html>",
sep="")
fileConn<-file("~/Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app/html_scripts/ExplorePreviousPatients.html")
writeLines(ExplorePreviousPatients_html, fileConn)
close(fileConn)
runApp()
source("https://raw.githubusercontent.com/vicsanga/Postre/main/Postre_wrapper.R")
runApp()
runApp()
####################################################################
## Script for HTML generation for Web with Patients Cohort Study
####################################################################
##Use maybe the Standard info only
##Loading Standard Mode PARSED results
load(file = "~/Dropbox/Cantabria/PhD_Project/Resultados/softwareObjects/multiplePatientAnalysis/StandardMode_ParsedResults_MultiplePatientAnalyses.RData")
########################################
##HTML generation with cohort results
########################################
###Setwd in the folder where all the app info is hosted
setwd("~/Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app/")
##Required functions
source("functions/multiple_SV_Functions/multipleStats_ExplorePreviousPat_htmlGeneration.R")
##AllPatientsInfo table, required for the Patients Info section
load("~/Dropbox/Cantabria/PhD_Project/DatosPHD/fichasPacientes/AllPatientsInfo.RData")
##Phenotypes to be considered
consideredPheno<-c("head_neck",
"cardiovascular",
"limbs",
"neurodevelopmental")##As more phenos considered they will appear here
ExplorePreviousPatients_html<-multipleStats_htmlGeneration(cohort_results = cohort_results_standard,
consideredPheno = consideredPheno,
ids_append="PreviousPat",##to avoid conflicts with tables generated in multiples submission option
AllPatientsInfo=AllPatientsInfo,
explPreviousPatSection = TRUE)
###########################################################################################
##This is the html that is going to be loaded on the Explore Previous Patients Section
##Wrapp in html tags to avoid issues AND save html
###########################################################################################
ExplorePreviousPatients_html<-paste("<html><body>",
ExplorePreviousPatients_html,
"</body></html>",
sep="")
fileConn<-file("~/Dropbox/Cantabria/PhD_Project/ScriptsPhd/ScriptsParaUsoLocal/Postre/Postre_app/html_scripts/ExplorePreviousPatients.html")
writeLines(ExplorePreviousPatients_html, fileConn)
close(fileConn)
runApp()
runApp()
runApp()
runApp()
source("https://raw.githubusercontent.com/vicsanga/Postre/main/Postre_wrapper.R")
